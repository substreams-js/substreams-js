// Copyright 2022-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file buf/reflect/v1beta1/file_descriptor_set.proto (package buf.reflect.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetFileDescriptorSetRequest, GetFileDescriptorSetResponse } from "./file_descriptor_set_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * FileDescriptorSetService is implemented by a schema registry. It allows clients to download
 * Protobuf schemas. The schema is returned in the form of a FileDescriptorSet, which is also
 * the same form produced by the `protoc` reference compiler (and is compatible with the format
 * produced by `buf`).
 *
 * Protobuf runtimes that support descriptors and dynamic messages provide APIs for taking
 * these FileDescriptorSet proto messages and turning those into a usable dynamic schema,
 * allowing clients to interpret and manipulate messages of arbitrary types, including
 * interpreting the Protobuf binary format.
 *
 * @generated from service buf.reflect.v1beta1.FileDescriptorSetService
 */
export const FileDescriptorSetService = {
  typeName: "buf.reflect.v1beta1.FileDescriptorSetService",
  methods: {
    /**
     * GetFileDescriptorSet returns a set of file descriptors that can be used to build
     * dynamic representations of a schema and/or service interfaces. This can also be
     * used for server reflection.
     *
     * @generated from rpc buf.reflect.v1beta1.FileDescriptorSetService.GetFileDescriptorSet
     */
    getFileDescriptorSet: {
      name: "GetFileDescriptorSet",
      I: GetFileDescriptorSetRequest,
      O: GetFileDescriptorSetResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
  }
} as const;

